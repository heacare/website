---
import Actions from "./Actions.astro";
import Navigation from "./Navigation.astro";
import SvgBackground from "./SvgBackground.astro";
import color from "../videos/color.mp4";

const { heading, description, actions } = Astro.props;
---

<div class="wrapper">
  <!--
  <video class="background" muted autoplay loop playsinline>
    <source src={color} type="video/mp4" />
  </video>
  -->

  <div class="navigation">
    <Navigation />
  </div>
  <section class="content">
    <div class="inner">
      <h1>
        {heading}
      </h1>
      <div class="limit">
        <p>{description}</p>
      </div>
      <Actions actions={actions} />
    </div>
  </section>
  <div class="hero-graphic">
    <SvgBackground image="mark" position="bottom-right" offset="-5em" />
    <SvgBackground
      image="hand-holding-heart-regular"
      position="bottom-left"
      offset="-1em"
    />
  </div>
</div>

<style>
  .wrapper {
    /*
    --color-content: white;
    --color-content-subtle: rgba(255, 255, 255, 0.2);
    --color-inverse: var(--color-darkgray);
    color: var(--color-content);

    background: var(--color-video);
    z-index: 10;
	*/

    /* Create a positioning scope for the background */
    position: relative;
    /* Keep margins inside box */
    padding: 1rem 0;
    /* Ensure background elements don't overflow */
    overflow: hidden;
  }

  .background {
    /* Position the background behind the content and navigation */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -10;
    /* Scale the background to cover instead of fitting */
    object-fit: cover;
    filter: brightness(0.95);
  }

  .navigation {
    margin: 2rem var(--gap-sides);
  }

  .content {
    margin: 12rem var(--gap-sides);
    margin-bottom: 12rem;
  }

  .inner {
    max-width: var(--width-md);
    margin: 0 auto;

    text-align: center;
    --items-align: center;
  }

  .limit {
    max-width: var(--width-sm);
    margin: 0 auto;
  }

  h1 {
    font-size: var(--font-scale-hero);
    font-family: var(--font-family-hero);
    font-weight: var(--font-weight-hero);
    line-height: var(--font-line-height-hero);

    background-image: var(--color-gradient-dense);

    margin: 2rem 0;
  }

  p {
    font-size: var(--font-scale-lg);
  }
</style>

<script>
  import onScroll from "../onscroll.ts";

  onScroll(
    document.querySelectorAll(".hero-graphic"),
    (ele) => ele,
    (ele, { scrollY, innerHeight }) => {
      const shift = scrollY / innerHeight;
      const offset = shift * 200;
      if (scrollY < innerHeight) {
        ele.style.transform = `translateY(${offset}px)`;
      } else {
        ele.style.transform = `translateY(0px)`;
      }
    }
  );
</script>
